# DO NOT EDIT! This file was auto-generated by crates/build/re_types_builder/src/codegen/python/mod.rs
# Based on "crates/store/re_types/definitions/rerun/components/graph_edge.fbs".

# You can extend this class by creating a "GraphEdgeExt" class in "graph_edge_ext.py".

from __future__ import annotations

from .. import datatypes
from .._baseclasses import (
    ComponentBatchMixin,
    ComponentMixin,
)

__all__ = ["GraphEdge", "GraphEdgeBatch", "GraphEdgeType"]


class GraphEdge(datatypes.GraphEdge, ComponentMixin):
    """
    **Component**: An edge in a graph connecting two nodes.

    Depending on the context this could represent a directed or undirected edge.
    """

    _BATCH_TYPE = None
    # You can define your own __init__ function as a member of GraphEdgeExt in graph_edge_ext.py

    # Note: there are no fields here because GraphEdge delegates to datatypes.GraphEdge
    pass


class GraphEdgeType(datatypes.GraphEdgeType):
    _TYPE_NAME: str = "rerun.components.GraphEdge"


class GraphEdgeBatch(datatypes.GraphEdgeBatch, ComponentBatchMixin):
    _ARROW_TYPE = GraphEdgeType()


# This is patched in late to avoid circular dependencies.
GraphEdge._BATCH_TYPE = GraphEdgeBatch  # type: ignore[assignment]
